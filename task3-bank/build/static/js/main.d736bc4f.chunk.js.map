{"version":3,"sources":["components/Controls/Controls.module.css","components/Balance/Balance.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Controls/Controls.js","components/Balance/Balance.js","components/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","App.js","index.js"],"names":["module","exports","Controls","amount","onClick","onChange","className","style","controls","type","name","value","Balance","balanceStay","balanceAdd","balance","role","aria-label","TransactionHistory","transiction","history","map","item","key","id","data","Dashboard","state","handleChange","target","setState","handleClick","addTransaction","cleanInput","notifyWarn","toast","warn","notifyError","error","stateObject","typeName","transitionAdd","shortid","generate","Date","toLocaleString","prevState","getIte","localStorage","getItem","JSON","parse","this","prevProp","setItem","stringify","length","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d736bc4f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__BY2-d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__30Dlf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__3SkB0\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Controls.module.css'\n\nconst Controls = ({ amount, onClick, onChange }) => (\n    <>\n        <section className={style.controls}>\n            <input\n                type=\"number\"\n                name='amount'\n                onClick={onClick}\n                onChange={onChange}\n                value={amount} />\n            <button type=\"button\"\n                name='deposit'\n                onClick={onClick}\n            >Transfer</button>\n            <button type=\"button\"\n                name=\"withdraw\"\n                onClick={onClick}>Payment</button>\n        </section>\n    </>\n)\n\nexport default Controls;\n\nControls.propTypes = {\n    amount: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Balance.module.css'\n\nconst Balance = ({ balanceStay, balanceAdd, balance }) => (\n    <>\n        <section className={style.balance}>\n            <span role=\"img\" aria-label=\"de\">⬆️{balanceAdd}$</span>\n            <span role=\"img\" aria-label=\"de\">⬇️{balanceStay}$</span>\n            <span>Balance: {balance}$</span>\n        </section>\n    </>\n)\n\nexport default Balance;\n\nBalance.propTypes = {\n    balanceStay: PropTypes.number.isRequired,\n    balanceAdd: PropTypes.number.isRequired,\n    balance: PropTypes.number.isRequired,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './TransactionHistory.module.css'\n\n\nconst TransactionHistory = ({ transiction }) => {\n    return (\n        <>\n            <table className={style.history}>\n                <thead>\n                    <tr>\n                        <th>Transaction</th>\n                        <th>Amount</th>\n                        <th>Date</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {transiction.map(item => (\n                        <tr key={item.id}>\n                            <td>{item.type}</td>\n                            <td>{item.amount}$</td>\n                            <td>{item.data}</td>\n                        </tr>\n                    ))}\n\n                </tbody>\n            </table>\n        </>\n    );\n}\n\nexport default TransactionHistory;\n\nTransactionHistory.propTypes = {\n    transiction: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string,\n            type: PropTypes.string,\n            amount: PropTypes.node,\n            date: PropTypes.string,\n        }).isRequired,\n    ).isRequired,\n}","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nexport default class Dashboard extends Component {\n    state = {\n        transiction: [],\n        balance: 0,\n        amount: '',\n        balanceAdd: 0,\n        balanceStay: 0,\n\n    }\n    // 3tak\n    componentDidMount() {\n        const getIte = localStorage.getItem('bank');\n        if (getIte !== null) {\n            const item = JSON.parse(getIte);\n            this.setState({ ...item });\n        }\n    }\n    componentDidUpdate(prevProp, prevState) {\n        const { transiction } = this.state;\n        if (prevState.transiction !== transiction) {\n            localStorage.setItem('bank', JSON.stringify(this.state));\n        }\n    }\n    // item on input\n    handleChange = ({ target }) => {\n        const { name, value } = target;\n        this.setState({\n            [name]: value,\n        })\n    };\n    // click on Button\n    handleClick = ({ target }) => {\n        const { name } = target;\n        this.addTransaction({ ...this.state }, name);\n\n    }\n    cleanInput = () => {\n        this.setState({\n            amount: ''\n        })\n    }\n    notifyWarn = () => toast.warn('Enter corect amount...');\n    notifyError = () =>\n        toast.error('Not enough money! Please enter correct number');\n\n    // create object Transiction and add in arr\n    // stateObject - object that we have\n\n    addTransaction = (stateObject, typeName) => {\n        if (+stateObject.amount <= 0) {\n            this.notifyWarn();\n            this.cleanInput();\n            return;\n        }\n\n        const transitionAdd = {\n            id: shortid.generate(),\n            type: typeName,\n            amount: stateObject.amount,\n            data: new Date().toLocaleString(),\n        }\n        if (typeName === 'deposit') {\n            this.setState(prevState => ({\n                transiction: [...prevState.transiction, transitionAdd],\n                balance: stateObject.balance + (+stateObject.amount),\n                balanceAdd: stateObject.balanceAdd + (+stateObject.amount),\n\n            }))\n        } else if (typeName === 'withdraw') {\n            if (stateObject.amount <= stateObject.balance) {\n                this.setState(prevState => ({\n                    transiction: [...prevState.transiction, transitionAdd],\n                    balance: stateObject.balance - (+stateObject.amount),\n                    balanceStay: stateObject.balanceStay + (+stateObject.amount),\n                }))\n\n\n            } else {\n                this.cleanInput();\n                this.notifyError();\n                return;\n\n            }\n\n        }\n    }\n\n    render() {\n        const {\n            transiction,\n            balance,\n            amount,\n            balanceAdd,\n            balanceStay\n        } = this.state;\n\n        return (\n            <>\n                <Controls\n                    onChange={this.handleChange}\n                    onClick={this.handleClick}\n                    amount={amount} />\n                <ToastContainer />\n                <Balance\n                    balanceAdd={balanceAdd}\n                    balanceStay={balanceStay}\n                    balance={balance} />\n                {transiction.length > 0 && (\n                    <TransactionHistory transiction={transiction} />\n                )}\n\n            </>\n        )\n    }\n}\n","import React from 'react';\n\nimport './App.css';\nimport Dashboard from './components/Dashboard/Dashboard';\n\nconst App = () => (\n  <>\n    <Dashboard />\n  </>\n)\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}